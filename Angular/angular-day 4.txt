Angular Day 4
--------------

Case Study: 
Take employee details from the User, Generate the List and add record to the List on the fly. 
Generate Stats for employees working in each department. 

employee.model.ts
=================
export class Employee{
  name: string;
  salary:number;
  department: string;
}

employee.component.html
=======================
 <div>
        <table style="width: 100%;">
          <tr>
            <td  style="width: 35%;">
              <h2>Employee Registration</h2>
              <form (submit)="onFormSubmit(employeeForm)" #employeeForm="ngForm">
                <label>Enter Employee Name: </label>
                <input type="text" name="name" ngModel required pattern="[a-zA-Z ]+"
                  #name="ngModel">
                <br /><br />
                <label>Enter Employee Salary: </label>
                <input type="text" name="salary" ngModel required pattern="[0-9]+"
                  #salary="ngModel">
                <br /><br />
                <label>Enter Employee Department: </label>
                <select name="department" ngModel required>
                  <option>--select department--</option>
                  <option value="development">Development</option>
                  <option value="admin">Admin</option>
                  <option value="sales">Sales</option>
                </select>
                <br /><br />
                <input type="submit" value="Add Employee" [disabled]="!employeeForm.valid">
              </form>
            </td>
            <td>
              <div>
                  <div class="stat">
                    <p> Development: {{devCount}} </p>
                  </div>
                  <div class="stat">
                    <p> Sales: {{salesCount}} </p>
                  </div>
                  <div class="stat">
                    <p> Admin: {{adminCount}}</p>
                  </div>
                  <div >
                      <br /> <br /><br />
                  </div>
              </div>
                <hr>
              <div class="tbl">
                 <table border="1" style="width: 100%;">
                    <thead>
                      <th>Name</th>
                      <th>Salary</th>
                      <th>Department</th>
                    </thead>
                    <tr *ngFor="let emp of employees">
                      <td>{{emp.name}}</td>
                      <td>{{emp.salary}}</td>
                      <td>{{emp.department}}</td>
                    </tr>
                  </table>
              </div>
            </td>
          </tr>
        </table>
      </div>

employee.component.css
======================
small{
  color: red;
}

.stat{
  float: left;
  width: 25%;
  font-family: sans-serif;
  font-size: large;
}
.tbl{
  float: none;
}

employee.component.ts
=====================
import { Component, OnInit,   } from '@angular/core';
import { NgForm } from '@angular/forms';
import {Employee} from './employee.model';
import { emp_data } from './data';
 @Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {
  employee: Employee;
  employees:Employee[];
  devCount: number;
  salesCount: number;
  adminCount: number;

  ngOnInit(){
     this.employees =emp_data;
     this.computeStat();
  }

  computeStat(){
    this.devCount = this.employees.filter(e=> e.department =='development').length; //[e1];
    this.salesCount = this.employees.filter(e=> e.department =='sales').length; //[e2];
    this.adminCount = this.employees.filter(e=> e.department =='admin').length; //[e3];
  }

  onFormSubmit(employeeForm:NgForm){
      let nameVal = employeeForm.value.name;
      let salaryVal = employeeForm.value.salary;
      let departmentVal = employeeForm.value.department;
      /* Attach values to employee Object */
       this.employee = {
        name : nameVal,
        salary : salaryVal,
        department : departmentVal
       }
       /* Add employee object in array  */
       this.employees.push(this.employee);
       this.computeStat();
  }
}




